#                      __           ___                  _      ___     
#  /'\_/`\            /\ \         /\_ \               /' \   /'___`\   
# /\      \    ___    \_\ \  __  __\//\ \      __     /\_, \ /\_\ /\ \  
# \ \ \__\ \  / __`\  /'_` \/\ \/\ \ \ \ \   /'__`\   \/_/\ \\/_/// /__ 
#  \ \ \_/\ \/\ \L\ \/\ \L\ \ \ \_\ \ \_\ \_/\  __/      \ \ \  // /_\ \
#   \ \_\\ \_\ \____/\ \___,_\ \____/ /\____\ \____\      \ \_\/\______/
#    \/_/ \/_/\/___/  \/__,_ /\/___/  \/____/\/____/       \/_/\/_____/ 

                                                                    
                                      
                                                                

#   _____         _     _ 
#  |_   _|__  ___| |_  / |
#    | |/ _ \/ __| __| | |
#    | |  __/\__ \ |_  | |
#    |_|\___||___/\__| |_|               


def summa_n(num: int) -> None:

    """
    Функция считает сумму чисел от 1 до num.

    * Аргументы:
        - num (int): целое число не равное 0. 
    * Возврат функции:
        - None
    """

    sum = int((1 + num) * num / 2)
    print(f'Сумма чисел от 1 до {num} равна {sum}')

number = abs(int(input('Введите число: ')))
if number: summa_n(number)





#   _____         _     ____  
#  |_   _|__  ___| |_  |___ \ 
#    | |/ _ \/ __| __|   __) |
#    | |  __/\__ \ |_   / __/ 
#    |_|\___||___/\__| |_____|                         


# def positive() -> None:

#     r"""
#     Функция выводит строку. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     print('Положительное')

# def negative() -> None:

#     r"""
#     Функция выводит строку. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     print('Отрицательное')

# def test() -> None:

#     r"""
#     Функция запрашивает у пользователя число и проверяет - является \
#     оно положительным или отрицательным. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     number = int(input('Введите число: '))
#     if number > 0:
#         positive()
#     elif number < 0:
#         negative()
#     else:
#         pass

# test()





#   _____         _     _____ 
#  |_   _|__  ___| |_  |___ / 
#    | |/ _ \/ __| __|   |_ \ 
#    | |  __/\__ \ |_   ___) |
#    |_|\___||___/\__| |____/ 
                            

# def sum_nums(num: int) -> None:

#     """
#     Функция считает сумму цифр num.

#     * Аргументы:
#         - num: int 
#     * Возврат функции:
#         - None
#     """

#     print(f'\nСумма цифр: {sum(map(int, str(num)))}\n')


# def max_num(num: int) -> None:

#     """
#     Функция определяет максимальную цифру числа num.

#     * Аргументы:
#         - num: int 
#     * Возврат функции:
#         - None
#     """

#     print(f'\nМаксимальная цифра: {max(str(num))}\n')


# def min_num(num: int) -> None:

#     """
#     Функция определяет минимальную цифру числа num.

#     * Аргументы:
#         - num: int 
#     * Возврат функции:
#         - None
#     """

#     print(f'\nМинимальная цифра: {min(str(num))}\n')


# def main() -> None:

#     """
#     Функция запрашивает у пользователя число и дает выбор действия с числом. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     count = 0 # Опять подписочка  ;)

#     while True:
#         try:
#             number = int(input('Введите число: '))
#             action = int(input('''
# Введите номер действия:
# 1 - сумма цифр
# 2 - максимальная цифра
# 3 - минимальная цифра: '''))
#             if action == 1:
#                 sum_nums(number)
#             elif action == 2:
#                 max_num(number)
#             elif action == 3:
#                 min_num(number)
#             else:
#                 print(f'\nКоманда "{action}" отсутсвует!\n')
#         except ValueError:
#             print('\nВы ввели недопустимое значение!\n')
#         finally:
#             count += 1
#             if count == 20:
#                 print('''
# К сожалению Ваши бесплатные попытки закончились! 
# Для продолжение приобретите нашу выгодную подписку. Спасибо)''')
#                 break

# main()





#   _____         _     _  _   
#  |_   _|__  ___| |_  | || |  
#    | |/ _ \/ __| __| | || |_ 
#    | |  __/\__ \ |_  |__   _|
#    |_|\___||___/\__|    |_|  


'''
УСЛОВИЯ ЗАДАЧИ НЕМНОГО ЗАПУТЫВАЮТ!

1 - "Напишите функцию count_letters(), которая принимает на вход текст ..."
    имеется ввиду, что я должен передать лишь один аргумент с тексотом?

2 - "... какое в нём количество цифр K и букв N ..."
    учитывая, что "К" не является цифврой могу предположить, что "К" и "N" переменные. Соответственно вопрос, мне нужно так их назвать?
'''


# def count_letters(line: str, figure: int, letter: str) -> None:

#     r"""
#     Функция подсчитывает количество цифр и букв \
#     (одна цифра, одна буква) в введенном тексте. 

#     * Аргументы:
#         - line: str
#         - figure: int
#         - letter: str
#     * Возврат функции:
#         - None
#     """

#     print(f'\nКоличество цифр {figure}: {line.count(str(figure))}')
#     print(f'Количество букв {letter}: {line.count(letter)}')


# def main() -> None:

#     r"""
#     Функция запрашивает у пользователя текст в котором необходимо найти \
#     букву и цифру. Также запрашивает букву и цифру которую нужно найти в тексте. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     try:
#         line = input('Введите текст: ')
#         figure = int(input('Какую цифру ищем? '))
#         letter = input('Какую букву ищем? ')
#         if letter.isdigit(): # К СОЖАЛЕНИЮ НЕ УЧИТЫВАЕТ ИНЫЕ СИМВОЛЫ
#             raise ValueError(f'Вы ввели "{letter}", когда необходимо букву!') 
#         count_letters(line, figure, letter)
#     except ValueError as error:
#         print('\nВы ввели недопустимое значение! Ошибка:', error)

# main()





#   _____         _     ____  
#  |_   _|__  ___| |_  | ___| 
#    | |/ _ \/ __| __| |___ \ 
#    | |  __/\__ \ |_   ___) |
#    |_|\___||___/\__| |____/ 


# def rock_paper_scissors(user_win) -> int:

#     r"""
#     Функция выполняющая игру "Камень, ножницы, бумага". \
#     В функции предусмотрены очки (победы в игре) пользователя. \ 

#     * Аргументы:
#         - user_win: int
#     * Возврат функции:
#         - user_win: int
#     """

#     from random import choice

#     print('''\n«Камень, ножницы, бумага»
# Для выхода из игры, введите: Выход''')

#     while True:
#         choices_list = {'камень': 0, 'ножницы': 1, 'бумага': 2}
#         try:
#             user_choice = input('\nВведите - камень, ножницы или бумага: ').lower()
#             if not user_choice in choices_list:
#                 if user_choice == 'выход':
#                     return user_win
#                 else:
#                     raise ValueError('Вы ввели недопустимое значение!')

#             ai_choice = choice(list(choices_list.values()))

#             result = (choices_list[user_choice] - ai_choice) % 3
            
#             if result == 0:
#                 print('Ничья')
#             elif result == 1:
#                 print('Вы победили!')
#                 user_win += 1
#             else:
#                 print('Компьютер победил')

#         except ValueError as error:
#             print(error)


# def guess_the_number(user_win) -> int:

#     r"""
#     Функция выполняющая игру "Угадай число". \
#     В функции предусмотрены очки (победы в игре) пользователя. \
#     По умолчанию установлен 2 уровень сложности. \
#     Выбор уровня пользователем не реализован. 

#     * Аргументы:
#         - user_win: int
#     * Возврат функции:
#         - user_win: int
#     """

#     from random import randint

#     print('''\n«Угадай число»
# Для выхода из игры, введите: Выход''')
    
#     activ_game = True
#     while activ_game:
#         lvl  = 2 # МОЖНО ЕЩЕ ВЫБИРАТЬ УРОВНИ, НО КАК НИБУДЬ ПОТОМ
#         ai_random_num = randint(1, lvl * 10)
#         print(f'\nЯ загадал целое число от 1 до {lvl * 10} (включительно)')
        
        
#         while True:
#             try:
#                 user_choice = input('Ты загодал число: ').lower()
#                 if user_choice != 'выход' and not (user_choice.isdigit() == True):
#                     raise ValueError('Вы ввели недопустимое значение!')
#                 elif user_choice == 'выход':
#                     activ_game = False
#                     return user_win
#                 elif int(user_choice) > ai_random_num:
#                     print('Не верно! Моё число меньше.')
#                 elif int(user_choice) < ai_random_num:
#                     print('Не верно! Моё число больше.')
#                 else:
#                     print('Вы угадали!')
#                     user_win += 1
#                     break
#             except ValueError as error:
#                 print(error)
    

# def main_menu() -> None:

#     r"""
#     Функция показывает главное меню приложения, с возможностью выбрать игру. \
#     В функции предусмотрены очки (победы в играх) пользователя. \
#     Функция не принимает аргументов и ничего не возвращает.
#     """

#     win = 0
#     while True:
#         print(f'''
# ГЛАВНОЕ МЕНЮ

# Мои победы: {win}

# ВЫБЕРИТЕ ИГРУ ИЛИ ВЫХОД: 
# 1 - «Камень, ножницы, бумага»
# 2 - «Угадай число»
# 0 - Выйти из раздела "Главное меню"                                     
#         ''')

#         try:
#             selection_game = int(input('Введите номер команды: '))
#             if selection_game == 1:
#                 win = rock_paper_scissors(win)
#             elif selection_game == 2:
#                 win = guess_the_number(win)
#             elif selection_game == 0:
#                 print('\nСпасибо за уделенное время! До свидания.')
#                 break
#             else:
#                 print('Такой команды нет!')
#         except ValueError:
#             print('Вы ввели недопустимое значение!')

# main_menu()